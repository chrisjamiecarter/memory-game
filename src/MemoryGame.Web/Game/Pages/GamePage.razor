@page "/game"
@rendermode InteractiveServer

@if (Game is null)
{
    <LoadingSpinner />
}
else
{
    @if (!Game.IsStarted && !Game.IsFinished)
    {
        <button @onclick="StartNewGame">Play</button>
        <div>
            <InputRadioGroup @bind-Value="Difficulty">
                <InputRadio id="easyDifficulty" Value="GameDifficulty.Easy" />
                <label for="easyDifficulty">Easy</label>
                <InputRadio id="normalDifficulty" Value="GameDifficulty.Normal" />
                <label for="normalDifficulty">Normal</label>
                <InputRadio id="hardDifficulty" Value="GameDifficulty.Hard" />
                <label for="hardDifficulty">Hard</label>
            </InputRadioGroup>
        </div>
        <button>High Scores</button>
        <button>How to Play</button>
    }
    else if (Game.IsStarted && !Game.IsFinished)
    {
        <GameBoard Board="Game.Board" />
    }
    else if (Game.IsFinished)
    {

    }
}

@code {
    private Game? Game { get; set; }
    private GameDifficulty Difficulty { get; set; } = GameDifficulty.Normal;

    private void StartNewGame()
    {
        Game!.ChangeDifficulty(Difficulty);
        Game!.IsStarted = true;
    }

    protected override Task OnInitializedAsync()
    {
        Game = new Game();

        return base.OnInitializedAsync();
    }
}
